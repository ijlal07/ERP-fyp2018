@model ERPEntities.Models.UserModel

    @{
        Layout = "~/Views/Shared/_AdminLayout.cshtml";
        ViewBag.Title = "Update User";
    }
    <div class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-2"></div>
                <div class="col-lg-8 col-md-8">
                    <div class="card">
                        <div class="card-header card-header-info card-header-icon">
                            <div class="card-icon">
                                <i class="material-icons">assignment</i>
                            </div>
                            <h4 class="card-title">@ViewBag.Title</h4>
                        </div>
                        
                        <div class="content">
                            @using (Html.BeginForm("", "", FormMethod.Post, new { method = "post", action = "/ManageUser/Update?id="+ @Html.DisplayFor(user => user.UserID) }))
                            { @Html.ValidationSummary(true)
                                @Html.AntiForgeryToken()

                                <div class="row">

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label>@Html.LabelFor(model => model.UserID)</label>
                                            @Html.TextBoxFor(model => model.UserID, new { @class = "form-control border-input", name = "FirstName" , value = @Html.DisplayFor(user => user.UserID) })
                                            <div>@Html.ValidationMessageFor(model => model.UserID)</div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label>@Html.LabelFor(model => model.FirstName)</label>
                                            @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control border-input", name = "LastName", value = @Html.DisplayFor(user => user.UserID) })
                                            <div>@Html.ValidationMessageFor(model => model.FirstName)</div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label>@Html.LabelFor(model => model.LastName)</label>
                                            @Html.TextBoxFor(model => model.LastName, new { @class = "form-control border-input", name = "UserName", value = @Html.DisplayFor(user => user.LastName) })
                                            <div>@Html.ValidationMessageFor(model => model.LastName)</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label>@Html.LabelFor(model => model.UserName)</label>
                                            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control border-input", name = "UserName", value = @Html.DisplayFor(user => user.UserName) })
                                            <div>@Html.ValidationMessageFor(model => model.UserName)</div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label>@Html.LabelFor(model => model.Password)</label>
                                            @Html.TextBoxFor(model => model.Password, new { @class = "form-control border-input", name = "Password", value = @Html.DisplayFor(user => user.Password) })
                                            <div>@Html.ValidationMessageFor(model => model.Password)</div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label>@Html.LabelFor(model => model.RoleID)</label>
                                            @Html.TextBoxFor(model => model.RoleID, new { @class = "form-control border-input", name = "RoleID",value = @Html.DisplayFor(user => user.RoleID) } )
                                            <div>@Html.ValidationMessageFor(model => model.RoleID)</div>
                                        </div>
                                    </div>  
                                </div>
                                <div class="row"> 
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>@Html.LabelFor(model => model.Email)</label>
                                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control border-input", name = "Email",value = @Html.DisplayFor(user => user.Email) })
                                            <div>@Html.ValidationMessageFor(model => model.Email)</div>
                                        </div>
                                    </div>

                                </div>
                                <div class="text-center">
                                    <input type="submit" class="btn btn-info btn-fill btn-wd" value="Submit" />
                                </div>
                                <div class="clearfix"></div>
                            }
                        </div>
                        
                    </div>
                </div>
                <div class="col-lg-2"></div>
            </div>
        </div>
    </div>
